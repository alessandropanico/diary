/* --- Variabili CSS --- */
:host {
  --primary-glow: #00ffee;
  --bg-blur: rgba(15, 15, 35, 0.8);
  --text-light: #ffffff;
  --label-color: #a0cfd8;
  --panel-solid-bg: rgba(20, 25, 50, 0.95);
  --border-subtle: rgba(0, 255, 238, 0.2);
  --button-hover-bg: rgba(0, 255, 238, 0.1);
  --glow-intensity-low: rgba(0, 255, 238, 0.1);
  --glow-intensity-medium: rgba(0, 255, 238, 0.25);
  --glow-intensity-high: rgba(0, 255, 238, 0.4);

  // Variabili Ionic mapping
  --ion-color-primary: var(--primary-glow);
  --ion-color-primary-rgb: 0, 255, 238;
  --ion-color-medium: #929292;
  --ion-color-medium-tint: #acacac;
  --ion-color-medium-shade: #808080;
  --ion-color-light: #f4f5f8;
  --ion-color-light-shade: #d7d8da;
  --ion-color-dark: #222428;

  // Variabile per l'altezza del footer (da calibrare)
  --comment-input-footer-height: 80px; /* Altezza approssimativa del footer */
}

/* --- Stili Globali "Duplicati" o specifici del componente --- */
.panel-glow-border {
  background: var(--bg-blur);
  border: 1px solid var(--border-subtle);
  border-radius: 8px;
  box-shadow: 0 0 6px var(--glow-intensity-low);
  text-align: left;
  transition: box-shadow 0.3s ease;

  &:hover {
    box-shadow: 0 0 10px var(--glow-intensity-medium);
  }
}

.post-avatar {
  width: 48px;
  height: 48px;
  border-radius: 50%;
  border: 2px solid var(--primary-glow);
  overflow: hidden;
  margin-right: 10px;
  box-shadow: 0 0 5px var(--glow-intensity-low);
  cursor: pointer;
  flex-shrink: 0;

  img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
}

.app-textarea {
  width: 100%;
  padding: 10px;
  border: 1px solid var(--ion-color-medium-tint);
  border-radius: 8px;
  background-color: var(--ion-color-light-shade);
  color: var(--ion-color-dark);
  font-size: 1rem;
  resize: none;
  overflow-y: hidden;
  min-height: 50px;
  max-height: 150px;
  transition: height 0.2s ease-out;

  &:focus {
    outline: none;
    border-color: var(--ion-color-primary);
    box-shadow: 0 0 0 2px rgba(var(--ion-color-primary-rgb), 0.2);
  }

  &::placeholder {
    color: var(--ion-color-medium);
  }
}

.app-button {
  background-color: var(--panel-solid-bg);
  border: 1px solid var(--primary-glow);
  border-radius: 4px;
  padding: 10px 15px;
  color: var(--primary-glow);
  font-family: 'Orbitron', sans-serif;
  font-size: 0.9em;
  font-weight: bold;
  text-transform: uppercase;
  cursor: pointer;
  box-shadow: 0 0 6px var(--glow-intensity-medium);
  transition: all 0.2s ease;
  display: flex;
  align-items: center;
  gap: 8px;

  &:hover {
    background-color: var(--button-hover-bg);
    box-shadow: 0 0 10px var(--glow-intensity-high);
  }

  &:active {
    background-color: rgba(0, 255, 238, 0.2);
    box-shadow: 0 0 12px var(--glow-intensity-high);
    transform: translateY(1px);
  }

  &:disabled {
    background-color: rgba(20, 25, 50, 0.5);
    border-color: rgba(0, 255, 238, 0.1);
    color: rgba(255, 255, 255, 0.4);
    cursor: not-allowed;
    box-shadow: none;
    transform: none;
  }

  &.primary-button {
    background-color: var(--primary-glow);
    color: var(--panel-solid-bg);
    box-shadow: 0 0 8px var(--glow-intensity-medium);

    &:hover {
      background-color: lighten(#00ffee, 3%);
      box-shadow: 0 0 10px var(--glow-intensity-high);
    }

    &:active {
      background-color: darken(#00ffee, 3%);
    }
  }

  &.delete-button {
    background-color: rgba(255, 50, 50, 0.5);
    border-color: #ff0000;
    color: var(--text-light);
    box-shadow: 0 0 6px rgba(255, 0, 0, 0.3);
    margin-left: auto;
    padding: 8px 12px;
    font-size: 0.8em;

    &:hover {
      background-color: rgba(255, 0, 0, 0.6);
      box-shadow: 0 0 10px rgba(255, 0, 0, 0.5);
    }

    &:active {
      background-color: rgba(255, 0, 0, 0.7);
    }

    .icon {
      background-color: var(--text-light);
      filter: none;
    }
  }
}

.app-button:disabled {
  opacity: 0.4;
  cursor: not-allowed;
  box-shadow: none;
  background-color: var(--ion-color-medium-tint);
  color: var(--ion-color-medium);
}

.app-button:disabled .icon {
  color: var(--ion-color-medium);
}

.primary-button:disabled {
  background-color: var(--ion-color-medium-shade);
  color: var(--ion-color-light);
}

.primary-button:disabled .icon-in-primary-button {
  color: var(--ion-color-light);
}

.icon {
  display: inline-block;
  width: 18px;
  height: 18px;
  vertical-align: middle;
  mask-size: cover;
  background-color: var(--primary-glow);
  -webkit-mask-size: cover;
  filter: drop-shadow(0 0 1px var(--glow-intensity-low));
}

.icon-in-primary-button {
  background-color: var(--panel-solid-bg);
  filter: none;
}

// Stili Animazione Caricamento
.loading-dots {
  display: inline-block;
  overflow: hidden;
  height: 1em;
  vertical-align: bottom;
  content: '\2026';
  animation: loading-dots 1.5s infinite steps(1, end);
}

@keyframes loading-dots {
  0% { width: 0; }
  33% { width: .5em; }
  66% { width: 1em; }
  100% { width: 1.5em; }
}


/* --- LAYOUT PRINCIPALE: Contenitore della Modal / Componente --- */
// Questo `host` o il contenitore della modal deve avere un'altezza definita, es. 100vh
:host {
  display: flex;
  flex-direction: column;
  height: 100%; // O l'altezza desiderata della modal, es. 80vh
  position: relative; // Necessario se il footer è 'fixed' al contenitore della modal

  // Rimuovi o imposta una max-width molto più alta per l'host se vuoi che la modal si estenda
  // Es. per rendere la modal "full width" sempre, potresti voler rimuovere completamente la max-width qui.
  // Oppure se vuoi una max-width solo su desktop, usa una media query.
  // max-width: 600px; /* Rimuovi o aumenta questa linea se vuoi più larghezza */
  // margin: 0 auto; /* Centra il wrapper orizzontalmente, ma rimuovi se vuoi larghezza piena */

  background: var(--bg-blur);
  border-radius: 8px;
  overflow: hidden;
}

// Questo wrapper non sarà più un flex container che gestisce footer e scroll separatamente.
// Servirà a contenere tutto il contenuto *scrollabile*.
.comment-section-content-wrapper {
  flex-grow: 1;
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
  position: relative;
  padding: 15px;
  padding-bottom: var(--comment-input-footer-height);

  // Assicurati che il contenuto scrollabile occupi sempre il 100% della larghezza del suo *genitore*.
  // Il genitore qui è :host, che ora può estendersi.
  width: 100%;
}


/* Contenitore per lo spinner di caricamento a schermo intero */
.loading-full-screen {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100%;
  width: 100%;
  position: absolute;
  top: 0;
  left: 0;
  background: var(--bg-blur);
  z-index: 10;
  color: var(--primary-glow);
  font-size: 1.1em;
}


/* --- Stili Card Commento Individuale --- */
.comment-card {
  @extend .panel-glow-border;
  padding: 12px;
  margin-bottom: 12px;
  width: 100%; /* Assicurati che le card occupino la larghezza piena disponibile */

  &:last-of-type {
    margin-bottom: 0;
  }
}

.comment-header {
  display: flex;
  align-items: center;
  margin-bottom: 8px;
  position: relative;

  .post-avatar {
    width: 36px;
    height: 36px;
    margin-right: 8px;
    border: 1px solid var(--primary-glow);
    box-shadow: 0 0 3px var(--glow-intensity-low);
  }

  .post-info {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
  }

  .post-username {
    font-size: 0.9em;
    font-weight: bold;
    color: var(--primary-glow);
    text-shadow: 0 0 1px var(--glow-intensity-low);
    cursor: pointer;

    &:hover {
      text-decoration: underline;
    }
  }

  .post-time {
    font-size: 0.7em;
    color: var(--label-color);
    margin-top: 2px;
  }
}

.comment-content {
  margin-left: calc(36px + 8px);
  margin-bottom: 10px;

  .post-text {
    font-size: 0.85em;
    line-height: 1.3;
    color: var(--text-light);
    white-space: pre-wrap;
    word-wrap: break-word;
  }
}

.comment-card-actions {
  display: flex;
  justify-content: flex-end;
  align-items: center;
  gap: 6px;
  margin-left: auto;

  ion-button {
    --padding-start: 6px;
    --padding-end: 6px;
    height: auto;
    font-size: 0.75em;
    --color: var(--label-color);
    background: transparent;
    box-shadow: none;

    &:hover {
      background-color: var(--button-hover-bg);
    }
    &:active {
      background-color: rgba(0, 255, 238, 0.15);
    }

    &.liked {
      --color: #ff3366;
      ion-icon {
        color: #ff3366;
      }
    }

    &[color="danger"] {
      --color: #ff0000;
      ion-icon {
        color: #ff0000;
      }
      &:hover {
        background-color: rgba(255, 0, 0, 0.2);
      }
    }

    ion-icon {
      font-size: 1.2em;
    }
  }
}

/* --- SEZIONE DI INPUT NUOVO COMMENTO (FOOTER FISSO) --- */
.comment-input-footer {
  position: fixed;
  bottom: 0;
  left: 0; /* Anziché 50% e translateX, lo ancoriamo a sinistra */
  width: 100%; /* Occupa sempre tutta la larghezza */

  // Se la tua modal non è sempre full screen, potresti voler allineare il footer alla larghezza della modal
  // Per esempio, se la modal ha una max-width, il footer dovrebbe rispettarla.
  // In questo caso, potresti voler rimettere `left: 50%; transform: translateX(-50%);`
  // e aggiungere `max-width: 600px;` (o la max-width della tua modal) qui.
  // Dipende da come gestisci l'apertura della modal a livello globale.
  // Per ora, assumiamo che la modal debba essere "full width" o quasi.

  padding: 10px 15px;
  @extend .panel-glow-border;
  background: #0B0C0D; /* O un altro colore completamente opaco, es. #141932 */
  border-top: 1px solid var(--border-subtle);
  margin-bottom: 0;
  border-bottom-left-radius: 8px;
  border-bottom-right-radius: 8px;
  border-top-left-radius: 0;
  border-top-right-radius: 0;
  z-index: 100;

  .comment-input-area {
    display: flex;
    align-items: flex-end;
    gap: 10px;

    .post-avatar {
      width: 40px;
      height: 40px;
      margin-right: 0;
    }

    .comment-textarea {
      flex-grow: 1;
      background-color: transparent;
      border: none;
      border-bottom: 1px solid var(--border-subtle);
      --padding-start: 0;
      --padding-end: 0;
      --padding-top: 5px;
      --padding-bottom: 5px;
      font-size: 0.9em;
      min-height: 40px;
      max-height: 100px;
      color: var(--text-light);

      &:focus {
        border-color: var(--primary-glow);
        box-shadow: none;
      }
      &::placeholder {
        color: var(--label-color);
      }
    }

    ion-button {
      --color: var(--primary-glow);
      --padding-start: 5px;
      --padding-end: 5px;
      font-size: 1.2em;
      height: 40px;
      width: 40px;
      ion-icon {
        font-size: 1.6em;
      }
    }
  }
}

/* --- Stili Messaggi di Stato (Nessun Commento) --- */
.no-comments-message {
  @extend .panel-glow-border;
  text-align: center;
  padding: 15px;
  font-size: 0.9em;
  color: var(--primary-glow);
  text-shadow: 0 0 1px var(--primary-glow);
  margin-bottom: 0;
}

/* --- Media Queries per la Responsività --- */
@media (max-width: 768px) {
  :host {
    border-radius: 0;
  }

  .comment-section-content-wrapper {
    padding-left: 10px;
    padding-right: 10px;
    // La padding-bottom dovrebbe essere la stessa del mobile, a meno che il footer non cambi altezza
  }

  .comment-card {
    padding: 10px;
    margin-bottom: 10px;
  }

  .comment-header {
    .post-avatar {
      width: 32px;
      height: 32px;
      margin-right: 6px;
    }
    .post-username {
      font-size: 0.85em;
    }
    .post-time {
      font-size: 0.65em;
    }
  }

  .comment-content {
    margin-left: calc(32px + 6px);
    .post-text {
      font-size: 0.8em;
    }
  }

  .comment-card-actions {
    gap: 4px;
    ion-button {
      font-size: 0.7em;
      ion-icon {
        font-size: 1.1em;
      }
    }
  }

  .comment-input-footer {
    max-width: 100%; // Il footer fisso occupa tutta la larghezza su mobile
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
    padding-left: 10px;
    padding-right: 10px;
  }
  .comment-input-area {
    .post-avatar {
      width: 36px;
      height: 36px;
    }
    .comment-textarea {
      font-size: 0.85em;
      min-height: 35px;
      max-height: 80px;
    }
    ion-button {
      font-size: 1em;
      width: 36px;
      height: 36px;
      ion-icon {
        font-size: 1.4em;
      }
    }
  }
}

/* --- Stili specifici per la modal se usi ion-modal --- */
// Questi stili devono essere applicati nel tuo file SCSS globale (es. `global.scss` o `app.scss`)
// o come `cssClass` quando apri la modal, perché Ionic gestisce il wrapper della modal con Shadow DOM.
// Esempio di applicazione con `cssClass`:
// ```typescript
// async presentCommentModal() {
//   const modal = await this.modalController.create({
//     component: CommentSectionComponent,
//     cssClass: 'comment-modal-fullscreen', // <-- Aggiungi questa classe
//     initialBreakpoint: 1, // Fullscreen se non usi brekpoints
//     breakpoints: [0, 1] // Se usi breakpoints, imposta 1 per full screen
//   });
//   await modal.present();
// }
// ```
// Nel tuo `global.scss` o `app.scss`:
.comment-modal-fullscreen {
  // Imposta l'altezza e la larghezza della modal stessa
  --width: 100%;
  --height: 100%;
  --border-radius: 0; /* Rimuove i bordi arrotondati della modal se vuoi full screen */
  --box-shadow: none; /* Rimuove l'ombra della modal */

  // Se Ionic applica ancora un max-width al suo wrapper interno per desktop, sovrascrivi:
  &::part(content) {
    width: 100%;
    max-width: 100%; /* Assicura che il contenuto della modal sia sempre al 100% */
  }

  // Puoi anche voler sovrascrivere l'allineamento di default della modal
  align-items: stretch;
  justify-content: stretch;
}

// Se stai usando una versione di Ionic più vecchia che non supporta --width/--height o ::part(content),
// potresti dover usare un selettore più aggressivo (meno raccomandato ma a volte necessario):
// .comment-modal-fullscreen .modal-wrapper {
//   width: 100%;
//   height: 100%;
//   max-width: 100%;
//   border-radius: 0;
// }
